
==================== FINAL INTERFACE ====================
2015-12-04 03:40:34.016293 UTC

interface main@main:Main 7102
  interface hash: 6a30dd7b0612e9e50820834a8996238d
  ABI hash: d0b4c16d72d52bc064a5e30fd69655f8
  export-list hash: 87ddcf15f2b3c7ffff28d419682ec982
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 8d6dbf50db069d3a5a4f2e10ef4de3f1
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.greet
  Main.main
module dependencies:
package dependencies: base-4.8.1.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:GHC.Generics
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  base-4.8.1.0:System.IO 29a6f3d7c8ad8a4e6200d8bbb6e70aae
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
a8689d751ca9d457b2d66190a6da668c
  greet :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ name :: [GHC.Types.Char] ->
                 GHC.CString.unpackAppendCString#
                   "Hello "#
                   (GHC.Base.++ @ GHC.Types.Char name Main.greet1)) -}
101d254012cf6bc87c607a959ddb81ff
  greet1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "!"#) -}
74a78591f9e17030aa8e5e63f15d5ef7
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
68217cf48543046c07977aa971448901
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main4
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   ipv }) -}
c55e08ddc03382504d1df79f2b5c34fd
  main2 :: [GHC.Types.Char]
  {- Unfolding: (Main.greet Main.main3) -}
ec8ec5f08ceac245506710df5eaea10e
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "World"#) -}
9c88508e48c4da87b7a568f6c92308a3
  main4 :: [GHC.Types.Char]
  {- Unfolding: (Main.greet Main.main5) -}
f6e0552b2e724a546a227e44d3bceb6b
  main5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Matt"#) -}
b33893b35d92ccc964eae0546cf71cb7
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

